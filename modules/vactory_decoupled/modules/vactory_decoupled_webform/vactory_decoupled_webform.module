<?php

/**
 * @file
 * Module file.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\webform\Entity\Webform;

/**
 * Implements hook_webform_element_configuration_form_alter().
 */
function vactory_decoupled_webform_webform_element_configuration_form_alter(array &$form, FormStateInterface $form_state) {
  $element_properties = $form_state->get('element_properties');
  $webform_file_types = ['webform_document_file', 'webform_image_file'];
  if (in_array($element_properties['type'], $webform_file_types)) {
    $element_properties['default_file'] = $element_properties['default_file'] ?? '';
    $form['file']['default_file'] = [
      '#type'          => 'textfield',
      '#title'         => t('Default file'),
      '#default_value' => $element_properties['default_file'],
      '#description'   => t('Default file ID, tokens are supported'),
    ];
  }
  if ($element_properties['type'] === 'webform_wizard_page') {
    $element_properties['icon'] = $element_properties['icon'] ?? '';
    $form['form']['icon'] = [
      '#type'          => 'vactory_icon_picker',
      '#title'         => 'Step icon',
      '#default_value' => $element_properties['icon'],
    ];
  }
  $form_state->set('element_properties', $element_properties);
}

/**
 * Implements hook_webform_element_configuration_form_alter().
 */
function vactory_decoupled_webform_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  if (isset($form['#webform_id'])) {
    $webform = Webform::load($form['#webform_id']);
    $elements = $webform->getElementsInitializedAndFlattened();
    $resultKey = NULL;
    foreach ($elements as $key => $element) {
      if ($element['#type'] == 'captcha' && isset($element['#captcha_type']) && $element['#captcha_type'] == 'captcha/Math') {
        $form['#validate'][] = 'validate_captcha_math';
        break;
      }
    }
  }
}

/**
 * A custom validation for captcha math.
 */
function validate_captcha_math(&$form, FormStateInterface $form_state) {
  $errors = $form_state->getErrors();

  if (array_key_exists('captcha_response', $errors)) {
    unset($errors['captcha_response']);
  }
  $form_state->clearErrors();

  foreach ($errors as $key => $value) {
    $form_state->setErrorByName($key, $value);
  }
  $user_input = $form_state->getFormObject()->getEntity()->getData();

  $expected_captcha = \Drupal::database()
    ->select('captcha_sessions', 'cs')
    ->fields('cs', ['solution'])
    ->condition('csid', $user_input['captcha_sid'])
    ->execute()
    ->fetchField();

  if (!isset($expected_captcha) || $expected_captcha != $user_input['captcha_response']) {
    $form_state->setErrorByName('captcha_response', t("Le champs Captcha n'est pas valide."));
  }
}
