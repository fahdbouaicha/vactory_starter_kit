<?php

/**
 * @file
 * Module installation hooks.
 */

use Drupal\Core\Field\BaseFieldDefinition;

/**
 * Implements hook_install().
 */
function vactory_content_package_install($is_syncing) {
  $node_id_definition = BaseFieldDefinition::create('string')
    ->setLabel(t('Node machine name'))
    ->setDescription(t('A machine-readable name for the node.'))
    ->setRequired(TRUE)
    ->addConstraint('UniqueField')
    ->setSettings([
      'default_value' => '',
      'max_length' => 255,
      'text_processing' => 0,
    ])
    ->setDisplayOptions('form', [
      'type' => 'string_textfield_with_counter',
      'weight' => 3,
    ]);
  $term_id_definition = BaseFieldDefinition::create('string')
    ->setLabel(t('Term machine name'))
    ->setDescription(t('A machine-readable name for the terms.'))
    ->setRequired(TRUE)
    ->addConstraint('UniqueField')
    ->setSettings([
      'default_value' => '',
      'max_length' => 255,
      'text_processing' => 0,
    ])
    ->setDisplayOptions('form', [
      'type' => 'string_textfield_with_counter',
      'weight' => 3,
    ]);

  // Install node machine name new field.
  Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('node_id', 'node', 'vactory_content_package', $node_id_definition);
  // Install term machine name new field.
  Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('term_id', 'taxonomy_term', 'vactory_content_package', $term_id_definition);

  // Update form displays.
  vactory_content_package_update_form_display('node', 'node_id');
  vactory_content_package_update_form_display('taxonomy_term', 'term_id');

  $node_storage = Drupal::entityTypeManager()->getStorage('node');
  $nids = $node_storage->getQuery()
    ->condition('type', 'vactory_page')
    ->accessCheck(FALSE)
    ->execute();
  if (!empty($nids)) {
    $nodes = $node_storage->loadMultiple($nids);
    foreach ($nodes as $node) {
      try {
        $node->save();
      } catch (Exception $e) {
      }
    }
  }

  $term_storage = Drupal::entityTypeManager()->getStorage('taxonomy_term');
  $terms = $term_storage->loadMultiple();
  if (!empty($terms)) {
    foreach ($terms as $term) {
      try {
        $term->save();
      } catch (Exception $e) {
      }
    }
  }
}

/**
 * Implements hook_cron().
 */
function vactory_content_package_update_form_display($entity_type, $field_name) {
  // Update existing form displays.
  $bundles = \Drupal::service('entity_type.bundle.info')
    ->getBundleInfo($entity_type);
  foreach ($bundles as $bundle => $infos) {
    $entity_form_display = Drupal::entityTypeManager()
      ->getStorage('entity_form_display')
      ->load('node.' . $bundle . '.default');
    if ($entity_form_display) {
      $entity_form_display->setComponent($field_name, [
        'type' => 'string_textfield_with_counter',
      ])->save();
    }
  }
}

/**
 * Implements hook_uninstall().
 */
function vactory_content_package_uninstall($is_syncing) {
  field_cron();
}

/**
 * Add node_content_package_exclude field.
 */
function vactory_content_package_update_9571() {
  $storage_definition = BaseFieldDefinition::create('boolean')
    ->setLabel(t('Yes, exclude this entity from the content package (import/export).'))
    ->setTranslatable(FALSE)
    ->setDisplayOptions('form', [
      'type' => 'boolean_checkbox',
      'settings' => [
        'display_label' => TRUE,
      ],
    ])
    ->setDisplayConfigurable('form', TRUE);

  \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('node_content_package_exclude', 'node', 'node', $storage_definition);
}
